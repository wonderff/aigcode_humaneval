[
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_employee` (\n  `empno` int NOT NULL COMMENT '员工编号',\n  `ename` varchar(10) DEFAULT NULL COMMENT '员工姓名',\n  `job` varchar(9) DEFAULT NULL COMMENT '员工岗位',\n  `mgr` int DEFAULT NULL COMMENT '上级主管编号',\n  `hiredate` date DEFAULT NULL COMMENT '入职时间',\n  `sal` float(7,2) DEFAULT NULL COMMENT '薪水',\n  `comm` float(7,2) DEFAULT NULL COMMENT '补助',\n  `dept_id` int DEFAULT NULL COMMENT '部门ID',\n  `mobile` varchar(16) DEFAULT NULL COMMENT '手机号',\n  `email` varchar(64) DEFAULT NULL COMMENT '邮箱',\n  PRIMARY KEY (`empno`) USING BTREE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=DYNAMIC COMMENT='部门员工信息表';\n",
        "input": "2023年入职薪水超过1万的员工的平均补助是多少",
        "output": "select avg(comm) as 平均补助 from lc_employee where year(hiredate) = 2023 and sal > 10000"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_visit` (\n  `visit_id` int unsigned NOT NULL AUTO_INCREMENT COMMENT '参观记录ID',\n  `Museum_ID` int DEFAULT NULL COMMENT '博物馆ID',\n  `consumer_ID` int DEFAULT NULL COMMENT '购票者ID',\n  `Num_of_Ticket` int DEFAULT NULL COMMENT '门票数量',\n  `Total_spent` double DEFAULT NULL COMMENT '总花费',\n  `visit_time` datetime DEFAULT NULL COMMENT '参观时间',\n  PRIMARY KEY (`visit_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=365 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='博物馆参观记录表';\n",
        "input": "今年售票数量最多的月份",
        "output": "select month(visit_time) as `月份`, sum(num_of_ticket) as `售票数量` from lc_visit where year(visit_time) = year(curdate()) group by month(visit_time) order by sum(num_of_ticket) desc limit 1"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_museum` (\n  `Museum_ID` int unsigned NOT NULL COMMENT '博物馆ID',\n  `Name` varchar(64) DEFAULT NULL COMMENT '名字',\n  `Num_of_Staff` int DEFAULT NULL COMMENT '员工数量',\n  `Open_Year` int DEFAULT NULL COMMENT '开馆年份',\n  PRIMARY KEY (`Museum_ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='博物馆表';\n\n\nCREATE TABLE `lc_visit` (\n  `visit_id` int unsigned NOT NULL AUTO_INCREMENT COMMENT '参观记录ID',\n  `Museum_ID` int DEFAULT NULL COMMENT '博物馆ID',\n  `consumer_ID` int DEFAULT NULL COMMENT '购票者ID',\n  `Num_of_Ticket` int DEFAULT NULL COMMENT '门票数量',\n  `Total_spent` double DEFAULT NULL COMMENT '总花费',\n  `visit_time` datetime DEFAULT NULL COMMENT '参观时间',\n  PRIMARY KEY (`visit_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=365 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='博物馆参观记录表';\n",
        "input": "参观次数最多的博物馆是哪个",
        "output": "select m.name as 博物馆名称, count(v.visit_id) as 参观次数 from lc_museum m join lc_visit v on m.museum_id = v.museum_id group by m.museum_id order by count(v.visit_id) desc limit 1"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_creditscore` (\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `Score` int DEFAULT NULL COMMENT '信用分',\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户信用评分表';\n\n\nCREATE TABLE `lc_loaninfo` (\n  `LoanID` int NOT NULL COMMENT '贷款ID',\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `LoanAmount` decimal(10,2) DEFAULT NULL COMMENT '贷款金额',\n  `LoanTerm` int DEFAULT NULL COMMENT '贷款期限(月)',\n  `ApplyTime` datetime DEFAULT NULL COMMENT '申请时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  `ApprovalTime` datetime DEFAULT NULL COMMENT '审批通过时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  PRIMARY KEY (`LoanID`),\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户贷款信息表';\n",
        "input": "信用分在400以上的用户的总贷款金额是多少",
        "output": "select sum(l.loanamount) as 总贷款金额 from lc_creditscore c join lc_loaninfo l on c.userid = l.userid where c.score > 400"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n",
        "input": "哪个国家的汽车型号最多",
        "output": "select cr.name_cn as 国家, count(*) as 汽车型号数量 from lc_car_makers cm join lc_country_region cr on cm.country_region_code = cr.country_region_code join lc_car_names cn on cm.maker = cn.make group by cr.name_cn order by count(*) desc limit 1"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n",
        "input": "比亚迪有几个型号",
        "output": "select count(distinct lc_car_names.model) as 型号数量 from lc_car_makers inner join lc_car_names on lc_car_makers.id = lc_car_names.makeid where lc_car_makers.fullname = '比亚迪'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_singers` (\n  `Singer_ID` int NOT NULL COMMENT '歌手ID',\n  `Name` varchar(64) DEFAULT NULL COMMENT '姓名',\n  `Country_region_name_en` varchar(64) DEFAULT NULL COMMENT '国家/地区英文名称',\n  `Song_Name` varchar(64) DEFAULT NULL COMMENT '歌曲名字',\n  `Song_release_year` varchar(4) DEFAULT NULL COMMENT '歌曲发行年份',\n  `Age` int DEFAULT NULL COMMENT '年龄',\n  `Is_male` tinyint(1) DEFAULT NULL COMMENT '性别; 1-男性;0-女性',\n  PRIMARY KEY (`Singer_ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='歌手表';\n",
        "input": "歌手的性别占比",
        "output": "select is_male as 性别, count(*) as 数量 from lc_singers group by is_male"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_loaninfo` (\n  `LoanID` int NOT NULL COMMENT '贷款ID',\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `LoanAmount` decimal(10,2) DEFAULT NULL COMMENT '贷款金额',\n  `LoanTerm` int DEFAULT NULL COMMENT '贷款期限(月)',\n  `ApplyTime` datetime DEFAULT NULL COMMENT '申请时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  `ApprovalTime` datetime DEFAULT NULL COMMENT '审批通过时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  PRIMARY KEY (`LoanID`),\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户贷款信息表';\n",
        "input": "2023年1月申请贷款的总金额",
        "output": "select sum(loanamount) as 总贷款金额 from lc_loaninfo where month(applytime) = 1 and year(applytime) = 2023"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_jyycml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `identity_id_p` varchar(255) DEFAULT NULL COMMENT '主体身份代码',\n  `company_name` varchar(255) DEFAULT NULL COMMENT '企业名称',\n  `lr_date` date DEFAULT NULL COMMENT '列入日期',\n  `yc_date` date DEFAULT NULL COMMENT '移出日期',\n  `company_location` varchar(255) DEFAULT NULL COMMENT '经营场所',\n  `status` varchar(255) DEFAULT NULL COMMENT '名录状态',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='经营异常企业名录';\n\n\nCREATE TABLE `lc_xwqyml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `register_no` varchar(255) DEFAULT NULL COMMENT '注册号',\n  `company_name` varchar(255) DEFAULT NULL COMMENT '企业名称',\n  `register_money` varchar(255) DEFAULT NULL COMMENT '资金数额（万元）',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='小微企业登记目录';\n",
        "input": "经营异常的公司的总资金数额",
        "output": "select sum(lx.register_money) as 总资金数额 from lc_jyycml lj join lc_xwqyml lx on lj.tyshxydm = lx.tyshxydm"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_flights` (\n  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `Airline_uid` bigint DEFAULT NULL COMMENT '航空公司主键',\n  `FlightNo` varchar(32) DEFAULT NULL COMMENT '航班号',\n  `SourceAirport` varchar(64) DEFAULT NULL COMMENT '起始机场',\n  `DestAirport` varchar(64) DEFAULT NULL COMMENT '目的机场',\n  `SourceCountryRegionCode` varchar(16) DEFAULT NULL COMMENT '起始机场国家/地区代码',\n  `DestCountryRegionCode` varchar(16) DEFAULT NULL COMMENT '目的机场国家/地区代码',\n  `IATA` varchar(8) DEFAULT NULL COMMENT '航空公司二字码',\n  PRIMARY KEY (`id`),\n  KEY `Airline` (`Airline_uid`)\n) ENGINE=InnoDB AUTO_INCREMENT=30059 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='航班表';\n\n\nCREATE TABLE `lc_airlines` (\n  `uid` int DEFAULT NULL COMMENT '唯一标识',\n  `name_cn` varchar(64) DEFAULT NULL COMMENT '公司中文名',\n  `name_en` varchar(256) DEFAULT NULL COMMENT '公司英文名',\n  `abbreviation` varchar(8) DEFAULT NULL COMMENT '缩写/简称',\n  `country_region_code` varchar(32) DEFAULT NULL COMMENT '国家/地区编码'\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='航空公司表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n",
        "input": "中国的航空公司的航班总数",
        "output": "select count(*) as 航班总数量 from lc_flights join lc_airlines on lc_flights.airline_uid = lc_airlines.uid join lc_country_region on lc_airlines.country_region_code = lc_country_region.country_region_code where lc_country_region.name_cn = '中国'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_flights` (\n  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `Airline_uid` bigint DEFAULT NULL COMMENT '航空公司主键',\n  `FlightNo` varchar(32) DEFAULT NULL COMMENT '航班号',\n  `SourceAirport` varchar(64) DEFAULT NULL COMMENT '起始机场',\n  `DestAirport` varchar(64) DEFAULT NULL COMMENT '目的机场',\n  `SourceCountryRegionCode` varchar(16) DEFAULT NULL COMMENT '起始机场国家/地区代码',\n  `DestCountryRegionCode` varchar(16) DEFAULT NULL COMMENT '目的机场国家/地区代码',\n  `IATA` varchar(8) DEFAULT NULL COMMENT '航空公司二字码',\n  PRIMARY KEY (`id`),\n  KEY `Airline` (`Airline_uid`)\n) ENGINE=InnoDB AUTO_INCREMENT=30059 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='航班表';\n\n\nCREATE TABLE `lc_airlines` (\n  `uid` int DEFAULT NULL COMMENT '唯一标识',\n  `name_cn` varchar(64) DEFAULT NULL COMMENT '公司中文名',\n  `name_en` varchar(256) DEFAULT NULL COMMENT '公司英文名',\n  `abbreviation` varchar(8) DEFAULT NULL COMMENT '缩写/简称',\n  `country_region_code` varchar(32) DEFAULT NULL COMMENT '国家/地区编码'\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='航空公司表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n",
        "input": "查询属于中国的航空公司的航班总数量",
        "output": "select count(*) as 航班总数量 from lc_flights join lc_airlines on lc_flights.airline_uid = lc_airlines.uid join lc_country_region on lc_airlines.country_region_code = lc_country_region.country_region_code where lc_country_region.name_cn = '中国'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_flights` (\n  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `Airline_uid` bigint DEFAULT NULL COMMENT '航空公司主键',\n  `FlightNo` varchar(32) DEFAULT NULL COMMENT '航班号',\n  `SourceAirport` varchar(64) DEFAULT NULL COMMENT '起始机场',\n  `DestAirport` varchar(64) DEFAULT NULL COMMENT '目的机场',\n  `SourceCountryRegionCode` varchar(16) DEFAULT NULL COMMENT '起始机场国家/地区代码',\n  `DestCountryRegionCode` varchar(16) DEFAULT NULL COMMENT '目的机场国家/地区代码',\n  `IATA` varchar(8) DEFAULT NULL COMMENT '航空公司二字码',\n  PRIMARY KEY (`id`),\n  KEY `Airline` (`Airline_uid`)\n) ENGINE=InnoDB AUTO_INCREMENT=30059 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='航班表';\n\n\nCREATE TABLE `lc_airlines` (\n  `uid` int DEFAULT NULL COMMENT '唯一标识',\n  `name_cn` varchar(64) DEFAULT NULL COMMENT '公司中文名',\n  `name_en` varchar(256) DEFAULT NULL COMMENT '公司英文名',\n  `abbreviation` varchar(8) DEFAULT NULL COMMENT '缩写/简称',\n  `country_region_code` varchar(32) DEFAULT NULL COMMENT '国家/地区编码'\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='航空公司表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n",
        "input": "查询属于澳大利亚的航空公司的航班总数量",
        "output": "select count(*) as 航班总数量 from lc_flights f join lc_airlines a on f.airline_uid = a.uid join lc_country_region c on a.country_region_code = c.country_region_code where c.name_cn = '澳大利亚'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_cfg_data` (\n  `Model` varchar(64) NOT NULL COMMENT '汽车型号名称',\n  `MPG` int DEFAULT NULL COMMENT '每加仑行驶的英里数',\n  `Cylinders` int DEFAULT NULL COMMENT '气缸数量',\n  `Edispl` double DEFAULT NULL COMMENT '发动机排量',\n  `Horsepower` int DEFAULT NULL COMMENT '马力',\n  `Weight` int DEFAULT NULL COMMENT '重量',\n  `Accelerate` double DEFAULT NULL COMMENT '加速',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号参数表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n",
        "input": "中国汽车制造商的平均发动机排量",
        "output": "select avg(lc_car_cfg_data.edispl) as 平均发动机排量 from lc_car_cfg_data inner join lc_car_names on lc_car_cfg_data.model = lc_car_names.model inner join lc_car_makers on lc_car_names.make = lc_car_makers.maker inner join lc_country_region on lc_car_makers.country_region_code = lc_country_region.country_region_code where lc_country_region.name_cn = '中国'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_cfg_data` (\n  `Model` varchar(64) NOT NULL COMMENT '汽车型号名称',\n  `MPG` int DEFAULT NULL COMMENT '每加仑行驶的英里数',\n  `Cylinders` int DEFAULT NULL COMMENT '气缸数量',\n  `Edispl` double DEFAULT NULL COMMENT '发动机排量',\n  `Horsepower` int DEFAULT NULL COMMENT '马力',\n  `Weight` int DEFAULT NULL COMMENT '重量',\n  `Accelerate` double DEFAULT NULL COMMENT '加速',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号参数表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n",
        "input": "中国的汽车制造商制造的汽车型号的平均发动机排量是多少",
        "output": "select avg(lc_car_cfg_data.edispl) as 平均发动机排量 from lc_car_cfg_data inner join lc_car_names on lc_car_cfg_data.model = lc_car_names.model inner join lc_car_makers on lc_car_names.make = lc_car_makers.maker inner join lc_country_region on lc_car_makers.country_region_code = lc_country_region.country_region_code where lc_country_region.name_cn = '中国'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_cfg_data` (\n  `Model` varchar(64) NOT NULL COMMENT '汽车型号名称',\n  `MPG` int DEFAULT NULL COMMENT '每加仑行驶的英里数',\n  `Cylinders` int DEFAULT NULL COMMENT '气缸数量',\n  `Edispl` double DEFAULT NULL COMMENT '发动机排量',\n  `Horsepower` int DEFAULT NULL COMMENT '马力',\n  `Weight` int DEFAULT NULL COMMENT '重量',\n  `Accelerate` double DEFAULT NULL COMMENT '加速',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号参数表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n",
        "input": "中国的汽车制造商制造的汽车型号的平均马力是多少",
        "output": "select avg(horsepower) as 平均马力 from lc_car_cfg_data join lc_car_names on lc_car_cfg_data.model = lc_car_names.model join lc_car_makers on lc_car_names.make = lc_car_makers.maker join lc_country_region on lc_car_makers.country_region_code = lc_country_region.country_region_code where lc_country_region.name_cn = '中国'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n\n\nCREATE TABLE `lc_car_cfg_data` (\n  `Model` varchar(64) NOT NULL COMMENT '汽车型号名称',\n  `MPG` int DEFAULT NULL COMMENT '每加仑行驶的英里数',\n  `Cylinders` int DEFAULT NULL COMMENT '气缸数量',\n  `Edispl` double DEFAULT NULL COMMENT '发动机排量',\n  `Horsepower` int DEFAULT NULL COMMENT '马力',\n  `Weight` int DEFAULT NULL COMMENT '重量',\n  `Accelerate` double DEFAULT NULL COMMENT '加速',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号参数表';\n",
        "input": "中国的汽车制造商的平均马力是多少",
        "output": "select avg(lc_car_cfg_data.horsepower) as 平均马力 from lc_country_region join lc_car_makers on lc_country_region.country_region_code = lc_car_makers.country_region_code join lc_car_names on lc_car_makers.id = lc_car_names.makeid join lc_car_cfg_data on lc_car_names.model = lc_car_cfg_data.model where lc_country_region.name_cn = '中国'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_cfg_data` (\n  `Model` varchar(64) NOT NULL COMMENT '汽车型号名称',\n  `MPG` int DEFAULT NULL COMMENT '每加仑行驶的英里数',\n  `Cylinders` int DEFAULT NULL COMMENT '气缸数量',\n  `Edispl` double DEFAULT NULL COMMENT '发动机排量',\n  `Horsepower` int DEFAULT NULL COMMENT '马力',\n  `Weight` int DEFAULT NULL COMMENT '重量',\n  `Accelerate` double DEFAULT NULL COMMENT '加速',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号参数表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n",
        "input": "中国制造商的平均马力是多少",
        "output": "select avg(horsepower) as 平均马力 from lc_car_cfg_data join lc_car_names on lc_car_cfg_data.model = lc_car_names.model join lc_car_makers on lc_car_names.make = lc_car_makers.maker where lc_country_region.name_cn = '中国'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_creditscore` (\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `Score` int DEFAULT NULL COMMENT '信用分',\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户信用评分表';\n\n\nCREATE TABLE `lc_loaninfo` (\n  `LoanID` int NOT NULL COMMENT '贷款ID',\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `LoanAmount` decimal(10,2) DEFAULT NULL COMMENT '贷款金额',\n  `LoanTerm` int DEFAULT NULL COMMENT '贷款期限(月)',\n  `ApplyTime` datetime DEFAULT NULL COMMENT '申请时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  `ApprovalTime` datetime DEFAULT NULL COMMENT '审批通过时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  PRIMARY KEY (`LoanID`),\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户贷款信息表';\n",
        "input": "查询一下贷款总额Bottom3用户的信用评分和用户ID",
        "output": "select c.Score as 信用评分, c.UserID as 用户ID from lc_creditscore c \r\n\r\njoin lc_loaninfo l on c.UserID = l.UserID  GROUP BY  c.UserID,  c.Score ORDER  by SUM(l.LoanAmount)  asc limit 3"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_loaninfo` (\n  `LoanID` int NOT NULL COMMENT '贷款ID',\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `LoanAmount` decimal(10,2) DEFAULT NULL COMMENT '贷款金额',\n  `LoanTerm` int DEFAULT NULL COMMENT '贷款期限(月)',\n  `ApplyTime` datetime DEFAULT NULL COMMENT '申请时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  `ApprovalTime` datetime DEFAULT NULL COMMENT '审批通过时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  PRIMARY KEY (`LoanID`),\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户贷款信息表';\n",
        "input": "2023年审批贷款金额",
        "output": "SELECT SUM(LoanAmount) AS 贷款总金额 FROM lc_loaninfo WHERE YEAR(ApprovalTime) = 2023"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_claim` (\n  `claim_id` int NOT NULL COMMENT '理赔ID',\n  `patient_id` int DEFAULT NULL COMMENT '患者ID',\n  `doctor_id` int DEFAULT NULL COMMENT '医生ID',\n  `claim_date` datetime DEFAULT NULL COMMENT '理赔日期',\n  `amount_claimed` varchar(255) DEFAULT NULL COMMENT '理赔金额',\n  `approval_status` varchar(255) DEFAULT NULL COMMENT '批准状态; Approved-已批准;Pending-待处理; Rejected-已驳回',\n  PRIMARY KEY (`claim_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=DYNAMIC COMMENT='医保理赔表';\n\n\nCREATE TABLE `lc_patient` (\n  `patient_id` int unsigned NOT NULL COMMENT '患者ID',\n  `first_name` varchar(255) DEFAULT NULL COMMENT '患者名字',\n  `last_name` varchar(255) DEFAULT NULL COMMENT '患者姓氏',\n  `dob` varchar(255) DEFAULT NULL COMMENT '出生日期',\n  `gender` varchar(255) DEFAULT NULL COMMENT '性别',\n  `address` varchar(255) DEFAULT NULL COMMENT '地址',\n  `insurance_id` int DEFAULT NULL COMMENT '医保ID',\n  PRIMARY KEY (`patient_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=DYNAMIC COMMENT='患者信息表';\n",
        "input": "曾俊贤申请理赔的数量",
        "output": "SELECT COUNT(*) as 理赔数量\r\nFROM lc_claim\r\nINNER JOIN lc_patient ON lc_claim.patient_id = lc_patient.patient_id\r\nWHERE lc_patient.first_name = '曾' AND lc_patient.last_name = '俊贤';"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_employee` (\n  `empno` int NOT NULL COMMENT '员工编号',\n  `ename` varchar(10) DEFAULT NULL COMMENT '员工姓名',\n  `job` varchar(9) DEFAULT NULL COMMENT '员工岗位',\n  `mgr` int DEFAULT NULL COMMENT '上级主管编号',\n  `hiredate` date DEFAULT NULL COMMENT '入职时间',\n  `sal` float(7,2) DEFAULT NULL COMMENT '薪水',\n  `comm` float(7,2) DEFAULT NULL COMMENT '补助',\n  `dept_id` int DEFAULT NULL COMMENT '部门ID',\n  `mobile` varchar(16) DEFAULT NULL COMMENT '手机号',\n  `email` varchar(64) DEFAULT NULL COMMENT '邮箱',\n  PRIMARY KEY (`empno`) USING BTREE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=DYNAMIC COMMENT='部门员工信息表';\n\n\nCREATE TABLE `lc_department` (\n  `dept_id` int NOT NULL COMMENT '部门ID，主键',\n  `dept_name` varchar(255) DEFAULT NULL COMMENT '部门名称',\n  `dept_head_empno` varchar(255) DEFAULT NULL COMMENT '部门负责人员工编号',\n  `city_id` int NOT NULL COMMENT '部门所在城市的外键',\n  `parent_dept_id` int DEFAULT NULL COMMENT '上级部门ID',\n  `dept_level` varchar(16) DEFAULT NULL COMMENT '部门级别，取值为一级部门; 二级部门; 三级部门',\n  PRIMARY KEY (`dept_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='部门基本信息表';\n",
        "input": "查询一下员工方新立的主管的邮箱地址",
        "output": "SELECT e.email AS 邮箱地址 FROM lc_employee e JOIN lc_department d ON e.dept_id = d.dept_id WHERE e.ename = '方新立'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_department` (\n  `dept_id` int NOT NULL COMMENT '部门ID，主键',\n  `dept_name` varchar(255) DEFAULT NULL COMMENT '部门名称',\n  `dept_head_empno` varchar(255) DEFAULT NULL COMMENT '部门负责人员工编号',\n  `city_id` int NOT NULL COMMENT '部门所在城市的外键',\n  `parent_dept_id` int DEFAULT NULL COMMENT '上级部门ID',\n  `dept_level` varchar(16) DEFAULT NULL COMMENT '部门级别，取值为一级部门; 二级部门; 三级部门',\n  PRIMARY KEY (`dept_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='部门基本信息表';\n",
        "input": "查询一下二级部门数量",
        "output": "select count(dept_id) as 二级部门数量 from lc_department where dept_level='二级部门'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_department` (\n  `dept_id` int NOT NULL COMMENT '部门ID，主键',\n  `dept_name` varchar(255) DEFAULT NULL COMMENT '部门名称',\n  `dept_head_empno` varchar(255) DEFAULT NULL COMMENT '部门负责人员工编号',\n  `city_id` int NOT NULL COMMENT '部门所在城市的外键',\n  `parent_dept_id` int DEFAULT NULL COMMENT '上级部门ID',\n  `dept_level` varchar(16) DEFAULT NULL COMMENT '部门级别，取值为一级部门; 二级部门; 三级部门',\n  PRIMARY KEY (`dept_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='部门基本信息表';\n",
        "input": "查询一下采购一处的上一级部门名称",
        "output": "SELECT parent.dept_name AS 上级部门名称 FROM lc_department AS child JOIN lc_department AS parent ON child.parent_dept_id = parent.dept_id WHERE child.dept_name = '采购一处'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n",
        "input": "查询一下2021年开始生产的汽车型号",
        "output": "SELECT cn.Model AS 型号名称, cn.Year AS 最早生产年份 FROM lc_car_names cn WHERE cn.Year >= 2021"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_museum` (\n  `Museum_ID` int unsigned NOT NULL COMMENT '博物馆ID',\n  `Name` varchar(64) DEFAULT NULL COMMENT '名字',\n  `Num_of_Staff` int DEFAULT NULL COMMENT '员工数量',\n  `Open_Year` int DEFAULT NULL COMMENT '开馆年份',\n  PRIMARY KEY (`Museum_ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='博物馆表';\n",
        "input": "开馆时间最早的博物馆名称",
        "output": "SELECT Name AS 博物馆名称 FROM lc_museum ORDER BY Open_Year ASC LIMIT 1"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_airlines` (\n  `uid` int DEFAULT NULL COMMENT '唯一标识',\n  `name_cn` varchar(64) DEFAULT NULL COMMENT '公司中文名',\n  `name_en` varchar(256) DEFAULT NULL COMMENT '公司英文名',\n  `abbreviation` varchar(8) DEFAULT NULL COMMENT '缩写/简称',\n  `country_region_code` varchar(32) DEFAULT NULL COMMENT '国家/地区编码'\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='航空公司表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n",
        "input": "统计一下英国航空公司数",
        "output": "select count(*) as 英国航空公司数 from lc_airlines where country_region_code = (select country_region_code from lc_country_region where name_en = 'United Kingdom')"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_flights` (\n  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `Airline_uid` bigint DEFAULT NULL COMMENT '航空公司主键',\n  `FlightNo` varchar(32) DEFAULT NULL COMMENT '航班号',\n  `SourceAirport` varchar(64) DEFAULT NULL COMMENT '起始机场',\n  `DestAirport` varchar(64) DEFAULT NULL COMMENT '目的机场',\n  `SourceCountryRegionCode` varchar(16) DEFAULT NULL COMMENT '起始机场国家/地区代码',\n  `DestCountryRegionCode` varchar(16) DEFAULT NULL COMMENT '目的机场国家/地区代码',\n  `IATA` varchar(8) DEFAULT NULL COMMENT '航空公司二字码',\n  PRIMARY KEY (`id`),\n  KEY `Airline` (`Airline_uid`)\n) ENGINE=InnoDB AUTO_INCREMENT=30059 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='航班表';\n",
        "input": "起始航班最多的机场",
        "output": "SELECT SourceAirport AS 起始机场 FROM lc_flights GROUP BY SourceAirport ORDER BY  count(*) DESC LIMIT 1"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_xcydjml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `company_name` varchar(256) DEFAULT NULL COMMENT '经营者名称',\n  `company_location` varchar(256) DEFAULT NULL COMMENT '经营场所',\n  `legal_person` varchar(32) DEFAULT NULL COMMENT '负责人姓名',\n  `business_range` varchar(256) DEFAULT NULL COMMENT '经营范围',\n  `business_district_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在县区名称',\n  `business_street_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在街道名称',\n  `certificate_no` varchar(256) DEFAULT NULL COMMENT '登记证编号',\n  `issue_time` date DEFAULT NULL COMMENT '发证日期',\n  `issue_office` varchar(256) DEFAULT NULL COMMENT '发证机关',\n  `valid_period` date DEFAULT NULL COMMENT '有效期至',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='小餐饮企业登记目录';\n",
        "input": "2019年前2个季度发证的小餐饮企业数量",
        "output": "SELECT COUNT(*) AS 小餐饮企业数量 FROM lc_xcydjml WHERE issue_time BETWEEN '2019-01-01' AND '2019-06-30'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_cfg_data` (\n  `Model` varchar(64) NOT NULL COMMENT '汽车型号名称',\n  `MPG` int DEFAULT NULL COMMENT '每加仑行驶的英里数',\n  `Cylinders` int DEFAULT NULL COMMENT '气缸数量',\n  `Edispl` double DEFAULT NULL COMMENT '发动机排量',\n  `Horsepower` int DEFAULT NULL COMMENT '马力',\n  `Weight` int DEFAULT NULL COMMENT '重量',\n  `Accelerate` double DEFAULT NULL COMMENT '加速',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号参数表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n",
        "input": "查询一下生产2缸汽车的制造商个数",
        "output": "select count(distinct lc_car_makers.Id) as 制造商个数 from lc_car_cfg_data inner join lc_car_names on lc_car_cfg_data.Model = lc_car_names.Model inner join lc_car_makers on lc_car_names.Make = lc_car_makers.Maker where lc_car_cfg_data.Cylinders = 2"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_singers` (\n  `Singer_ID` int NOT NULL COMMENT '歌手ID',\n  `Name` varchar(64) DEFAULT NULL COMMENT '姓名',\n  `Country_region_name_en` varchar(64) DEFAULT NULL COMMENT '国家/地区英文名称',\n  `Song_Name` varchar(64) DEFAULT NULL COMMENT '歌曲名字',\n  `Song_release_year` varchar(4) DEFAULT NULL COMMENT '歌曲发行年份',\n  `Age` int DEFAULT NULL COMMENT '年龄',\n  `Is_male` tinyint(1) DEFAULT NULL COMMENT '性别; 1-男性;0-女性',\n  PRIMARY KEY (`Singer_ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='歌手表';\n",
        "input": "查询一下女性歌手数量",
        "output": "SELECT COUNT(*) as 女性歌手数量 FROM lc_singers WHERE Is_male = 0"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_loaninfo` (\n  `LoanID` int NOT NULL COMMENT '贷款ID',\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `LoanAmount` decimal(10,2) DEFAULT NULL COMMENT '贷款金额',\n  `LoanTerm` int DEFAULT NULL COMMENT '贷款期限(月)',\n  `ApplyTime` datetime DEFAULT NULL COMMENT '申请时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  `ApprovalTime` datetime DEFAULT NULL COMMENT '审批通过时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  PRIMARY KEY (`LoanID`),\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户贷款信息表';\n",
        "input": "贷款金额超过10000且贷款期限10个月以上的每笔贷款从申请到审批通过的平均耗时是几天",
        "output": "select avg(datediff(ApprovalTime, ApplyTime)) as 平均耗时天数 from lc_loaninfo where LoanAmount > 10000 and LoanTerm > 10"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_creditscore` (\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `Score` int DEFAULT NULL COMMENT '信用分',\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户信用评分表';\n\n\nCREATE TABLE `lc_loaninfo` (\n  `LoanID` int NOT NULL COMMENT '贷款ID',\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `LoanAmount` decimal(10,2) DEFAULT NULL COMMENT '贷款金额',\n  `LoanTerm` int DEFAULT NULL COMMENT '贷款期限(月)',\n  `ApplyTime` datetime DEFAULT NULL COMMENT '申请时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  `ApprovalTime` datetime DEFAULT NULL COMMENT '审批通过时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  PRIMARY KEY (`LoanID`),\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户贷款信息表';\n",
        "input": "信用分大于200的用户的平均贷款次数是多少",
        "output": "SELECT AVG(LoanCount) AS 平均贷款次数 FROM ( SELECT lc_creditscore.UserID, COUNT(lc_loaninfo.LoanID) AS LoanCount FROM lc_creditscore JOIN lc_loaninfo ON lc_creditscore.UserID = lc_loaninfo.UserID WHERE lc_creditscore.Score > 200 GROUP BY lc_creditscore.UserID ) AS LoanCounts"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_car_cfg_data` (\n  `Model` varchar(64) NOT NULL COMMENT '汽车型号名称',\n  `MPG` int DEFAULT NULL COMMENT '每加仑行驶的英里数',\n  `Cylinders` int DEFAULT NULL COMMENT '气缸数量',\n  `Edispl` double DEFAULT NULL COMMENT '发动机排量',\n  `Horsepower` int DEFAULT NULL COMMENT '马力',\n  `Weight` int DEFAULT NULL COMMENT '重量',\n  `Accelerate` double DEFAULT NULL COMMENT '加速',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号参数表';\n\n\nCREATE TABLE `lc_car_names` (\n  `Model` varchar(64) NOT NULL COMMENT '型号名称',\n  `MakeId` int NOT NULL COMMENT '制造商ID',\n  `Make` varchar(64) NOT NULL COMMENT '制造商简称',\n  `Year` int DEFAULT NULL COMMENT '最早生产年份',\n  PRIMARY KEY (`Model`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车型号表';\n\n\nCREATE TABLE `lc_car_makers` (\n  `Id` int unsigned NOT NULL COMMENT '制造商ID',\n  `Maker` varchar(64) DEFAULT NULL COMMENT '制造商简称',\n  `FullName` varchar(256) DEFAULT NULL COMMENT '制造商全称',\n  `country_region_code` varchar(8) DEFAULT NULL COMMENT '制造商所在国家/地区代码',\n  PRIMARY KEY (`Id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='汽车制造商表';\n\n\nCREATE TABLE `lc_country_region` (\n  `country_region_code` varchar(8) NOT NULL COMMENT '国家/地区代码',\n  `name_cn` varchar(32) DEFAULT NULL COMMENT '中文名称',\n  `name_en` varchar(64) DEFAULT NULL COMMENT '英文名称',\n  `phone_code` int DEFAULT NULL COMMENT '电话代码',\n  PRIMARY KEY (`country_region_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='全球国家地区基本信息表';\n",
        "input": "哪个国家的4缸汽车型号最多",
        "output": "SELECT cr.name_cn AS 国家, COUNT(*) AS 汽车型号数量 FROM lc_car_cfg_data ccd JOIN lc_car_names cn ON ccd.Model = cn.Model JOIN lc_car_makers cm ON cn.MakeId = cm.Id JOIN lc_country_region cr ON cm.country_region_code = cr.country_region_code WHERE ccd.Cylinders = 4 GROUP BY cr.name_cn ORDER BY 汽车型号数量 DESC limit 1"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_museum` (\n  `Museum_ID` int unsigned NOT NULL COMMENT '博物馆ID',\n  `Name` varchar(64) DEFAULT NULL COMMENT '名字',\n  `Num_of_Staff` int DEFAULT NULL COMMENT '员工数量',\n  `Open_Year` int DEFAULT NULL COMMENT '开馆年份',\n  PRIMARY KEY (`Museum_ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='博物馆表';\n\n\nCREATE TABLE `lc_visit` (\n  `visit_id` int unsigned NOT NULL AUTO_INCREMENT COMMENT '参观记录ID',\n  `Museum_ID` int DEFAULT NULL COMMENT '博物馆ID',\n  `consumer_ID` int DEFAULT NULL COMMENT '购票者ID',\n  `Num_of_Ticket` int DEFAULT NULL COMMENT '门票数量',\n  `Total_spent` double DEFAULT NULL COMMENT '总花费',\n  `visit_time` datetime DEFAULT NULL COMMENT '参观时间',\n  PRIMARY KEY (`visit_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=365 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='博物馆参观记录表';\n",
        "input": "至今没有游客参观的博物馆名称",
        "output": "select m.Name as 博物馆名称 from lc_museum m left join lc_visit v on m.Museum_ID = v.Museum_ID where v.Museum_ID is null"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_tv_channel` (\n  `id` int unsigned NOT NULL COMMENT '电视频道ID',\n  `series_name` varchar(64) DEFAULT NULL COMMENT '系列名称',\n  `Country` varchar(64) DEFAULT NULL COMMENT '国家',\n  `Language` varchar(64) DEFAULT NULL COMMENT '语言',\n  `Content` varchar(64) DEFAULT NULL COMMENT '内容',\n  `Pixel_aspect_ratio_PAR` varchar(64) DEFAULT NULL COMMENT '像素长宽比',\n  `Hight_definition_TV` varchar(6) DEFAULT NULL COMMENT '是否是高清电视; 取值为yes和no，yes表示是，no表示否',\n  `Pay_per_view_PPV` varchar(64) DEFAULT NULL COMMENT '是否是按次收费; 取值为yes和no，yes表示是，no表示否',\n  `Package_Option` varchar(64) DEFAULT NULL COMMENT '套餐选项',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='电视频道表';\n",
        "input": "查询一下高清电视频道数",
        "output": "select count(*) as 高清电视频道数 from lc_tv_channel where Hight_definition_TV = 'yes'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_xcydjml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `company_name` varchar(256) DEFAULT NULL COMMENT '经营者名称',\n  `company_location` varchar(256) DEFAULT NULL COMMENT '经营场所',\n  `legal_person` varchar(32) DEFAULT NULL COMMENT '负责人姓名',\n  `business_range` varchar(256) DEFAULT NULL COMMENT '经营范围',\n  `business_district_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在县区名称',\n  `business_street_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在街道名称',\n  `certificate_no` varchar(256) DEFAULT NULL COMMENT '登记证编号',\n  `issue_time` date DEFAULT NULL COMMENT '发证日期',\n  `issue_office` varchar(256) DEFAULT NULL COMMENT '发证机关',\n  `valid_period` date DEFAULT NULL COMMENT '有效期至',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='小餐饮企业登记目录';\n",
        "input": "分别统计一下2019年和2021年发证的小餐饮企业数量",
        "output": "SELECT YEAR(issue_time) AS 发证年份, COUNT(*) AS 小餐饮企业数量\r\nFROM lc_xcydjml\r\nWHERE (issue_time BETWEEN '2019-01-01' AND '2019-12-31') OR (issue_time BETWEEN '2021-01-01' AND '2021-12-31')\r\nGROUP BY 发证年份\r\nORDER BY 发证年份;"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_xcydjml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `company_name` varchar(256) DEFAULT NULL COMMENT '经营者名称',\n  `company_location` varchar(256) DEFAULT NULL COMMENT '经营场所',\n  `legal_person` varchar(32) DEFAULT NULL COMMENT '负责人姓名',\n  `business_range` varchar(256) DEFAULT NULL COMMENT '经营范围',\n  `business_district_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在县区名称',\n  `business_street_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在街道名称',\n  `certificate_no` varchar(256) DEFAULT NULL COMMENT '登记证编号',\n  `issue_time` date DEFAULT NULL COMMENT '发证日期',\n  `issue_office` varchar(256) DEFAULT NULL COMMENT '发证机关',\n  `valid_period` date DEFAULT NULL COMMENT '有效期至',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='小餐饮企业登记目录';\n",
        "input": "截止2024年1月1日仍在有效期内的小餐饮企业数量",
        "output": "select count(*) as 在有效期内的小餐饮企业数量 from lc_xcydjml where valid_period >= '2024-01-01'"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_xcydjml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `company_name` varchar(256) DEFAULT NULL COMMENT '经营者名称',\n  `company_location` varchar(256) DEFAULT NULL COMMENT '经营场所',\n  `legal_person` varchar(32) DEFAULT NULL COMMENT '负责人姓名',\n  `business_range` varchar(256) DEFAULT NULL COMMENT '经营范围',\n  `business_district_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在县区名称',\n  `business_street_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在街道名称',\n  `certificate_no` varchar(256) DEFAULT NULL COMMENT '登记证编号',\n  `issue_time` date DEFAULT NULL COMMENT '发证日期',\n  `issue_office` varchar(256) DEFAULT NULL COMMENT '发证机关',\n  `valid_period` date DEFAULT NULL COMMENT '有效期至',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='小餐饮企业登记目录';\n",
        "input": "2023年5月1日小微企业发证数量相对于2021年7月1日增加多少",
        "output": "SELECT\r\n    (SELECT COUNT(*) FROM lc_xcydjml WHERE issue_time = '2023-05-01') -\r\n    (SELECT COUNT(*) FROM lc_xcydjml WHERE issue_time = '2021-07-01') AS 发证数量增加;"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_xcydjml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `company_name` varchar(256) DEFAULT NULL COMMENT '经营者名称',\n  `company_location` varchar(256) DEFAULT NULL COMMENT '经营场所',\n  `legal_person` varchar(32) DEFAULT NULL COMMENT '负责人姓名',\n  `business_range` varchar(256) DEFAULT NULL COMMENT '经营范围',\n  `business_district_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在县区名称',\n  `business_street_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在街道名称',\n  `certificate_no` varchar(256) DEFAULT NULL COMMENT '登记证编号',\n  `issue_time` date DEFAULT NULL COMMENT '发证日期',\n  `issue_office` varchar(256) DEFAULT NULL COMMENT '发证机关',\n  `valid_period` date DEFAULT NULL COMMENT '有效期至',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='小餐饮企业登记目录';\n\n\nCREATE TABLE `lc_xwqyml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `register_no` varchar(255) DEFAULT NULL COMMENT '注册号',\n  `company_name` varchar(255) DEFAULT NULL COMMENT '企业名称',\n  `register_money` varchar(255) DEFAULT NULL COMMENT '资金数额（万元）',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='小微企业登记目录';\n",
        "input": "查询一下同时登记为小餐饮企业和小微企业的企业数量",
        "output": "SELECT COUNT(*) as 同时登记数量 FROM lc_xcydjml INNER JOIN lc_xwqyml ON lc_xcydjml.tyshxydm = lc_xwqyml.tyshxydm"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_xcydjml` (\n  `tyshxydm` varchar(32) NOT NULL COMMENT '统一社会信用代码',\n  `company_name` varchar(256) DEFAULT NULL COMMENT '经营者名称',\n  `company_location` varchar(256) DEFAULT NULL COMMENT '经营场所',\n  `legal_person` varchar(32) DEFAULT NULL COMMENT '负责人姓名',\n  `business_range` varchar(256) DEFAULT NULL COMMENT '经营范围',\n  `business_district_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在县区名称',\n  `business_street_name` varchar(256) DEFAULT NULL COMMENT '经营场所所在街道名称',\n  `certificate_no` varchar(256) DEFAULT NULL COMMENT '登记证编号',\n  `issue_time` date DEFAULT NULL COMMENT '发证日期',\n  `issue_office` varchar(256) DEFAULT NULL COMMENT '发证机关',\n  `valid_period` date DEFAULT NULL COMMENT '有效期至',\n  PRIMARY KEY (`tyshxydm`),\n  KEY `idx_tyshxydm` (`tyshxydm`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='小餐饮企业登记目录';\n",
        "input": "查询一下统一社会信用代码为92370102MA3MP4NX6U的小餐饮企业的负责人，登记证编号，经营场所所在区县和街道名称",
        "output": "SELECT lc_xcydjml.legal_person as 负责人姓名, lc_xcydjml.certificate_no as 登记证编号, lc_xcydjml.business_district_name as 经营场所所在区县, lc_xcydjml.business_street_name as 经营场所所在街道 FROM lc_xcydjml WHERE lc_xcydjml.tyshxydm = '92370102MA3MP4NX6U"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_creditscore` (\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `Score` int DEFAULT NULL COMMENT '信用分',\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户信用评分表';\n\n\nCREATE TABLE `lc_loaninfo` (\n  `LoanID` int NOT NULL COMMENT '贷款ID',\n  `UserID` int NOT NULL COMMENT '用户ID',\n  `LoanAmount` decimal(10,2) DEFAULT NULL COMMENT '贷款金额',\n  `LoanTerm` int DEFAULT NULL COMMENT '贷款期限(月)',\n  `ApplyTime` datetime DEFAULT NULL COMMENT '申请时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  `ApprovalTime` datetime DEFAULT NULL COMMENT '审批通过时间，日期格式(%Y-%m-%d %H:%i:%s)',\n  PRIMARY KEY (`LoanID`),\n  KEY `UserID` (`UserID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='用户贷款信息表';\n",
        "input": "贷款总额超过20000的用户的平均信用得分是多少",
        "output": "SELECT AVG(Score) as 平均信用得分\r\nFROM lc_creditscore\r\nJOIN (\r\n    SELECT UserID, SUM(LoanAmount) as TotalLoanAmount\r\n    FROM lc_loaninfo\r\n    GROUP BY UserID\r\n    HAVING SUM(LoanAmount) > 20000\r\n) as grouped_loaninfo\r\nON lc_creditscore.UserID = grouped_loaninfo.UserID;"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_student_register_courses` (\n  `id` bigint NOT NULL AUTO_INCREMENT COMMENT '选课记录ID',\n  `student_id` int DEFAULT NULL COMMENT '学生ID',\n  `course_id` int NOT NULL COMMENT '课程ID',\n  `register_time` datetime DEFAULT NULL COMMENT '选课时间',\n  PRIMARY KEY (`id`),\n  KEY `id` (`id`),\n  KEY `idx_courseId` (`course_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=169 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='学生选课记录表';\n",
        "input": "每个学生平均选课数量",
        "output": "select avg(course_count) as 平均选课数量 from ( select student_id, count(course_id) as course_count from lc_student_register_courses group by student_id ) as course_counts"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_museum` (\n  `Museum_ID` int unsigned NOT NULL COMMENT '博物馆ID',\n  `Name` varchar(64) DEFAULT NULL COMMENT '名字',\n  `Num_of_Staff` int DEFAULT NULL COMMENT '员工数量',\n  `Open_Year` int DEFAULT NULL COMMENT '开馆年份',\n  PRIMARY KEY (`Museum_ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='博物馆表';\n\n\nCREATE TABLE `lc_visit` (\n  `visit_id` int unsigned NOT NULL AUTO_INCREMENT COMMENT '参观记录ID',\n  `Museum_ID` int DEFAULT NULL COMMENT '博物馆ID',\n  `consumer_ID` int DEFAULT NULL COMMENT '购票者ID',\n  `Num_of_Ticket` int DEFAULT NULL COMMENT '门票数量',\n  `Total_spent` double DEFAULT NULL COMMENT '总花费',\n  `visit_time` datetime DEFAULT NULL COMMENT '参观时间',\n  PRIMARY KEY (`visit_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=365 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='博物馆参观记录表';\n",
        "input": "参观收入最高的一个博物馆名称和收入金额",
        "output": "select Name as 博物馆名称, sum(Total_spent) as 收入金额 from lc_museum join lc_visit on lc_museum.Museum_ID = lc_visit.Museum_ID group by lc_museum.Museum_ID order by sum(Total_spent) desc limit 1"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_claim` (\n  `claim_id` int NOT NULL COMMENT '理赔ID',\n  `patient_id` int DEFAULT NULL COMMENT '患者ID',\n  `doctor_id` int DEFAULT NULL COMMENT '医生ID',\n  `claim_date` datetime DEFAULT NULL COMMENT '理赔日期',\n  `amount_claimed` varchar(255) DEFAULT NULL COMMENT '理赔金额',\n  `approval_status` varchar(255) DEFAULT NULL COMMENT '批准状态; Approved-已批准;Pending-待处理; Rejected-已驳回',\n  PRIMARY KEY (`claim_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=DYNAMIC COMMENT='医保理赔表';\n",
        "input": "发起理赔不同患者的个数",
        "output": "SELECT COUNT(DISTINCT lc_claim.patient_id) AS 不同患者的个数 FROM lc_claim"
    },
    {
        "instruction": "\n你是一个DBA，需要根据表结构来生成一些报表，你需要写一些查询的SQL语句来完成这个任务。\n查询字段全部用 as 替换为不同的中文，查询字段全部用 as 替换为不同的中文，SQL语句以;号结尾。\r\n\n### 表结构\n\n\n\nCREATE TABLE `lc_syjglt_whpaqsgxx` (\n  `id` varchar(100) NOT NULL COMMENT '主键',\n  `sgfsfw` varchar(255) DEFAULT NULL COMMENT '事故发生单位',\n  `swrs` varchar(255) DEFAULT NULL COMMENT '死亡人数',\n  `sflx` varchar(255) DEFAULT NULL COMMENT '事故类型',\n  `ssrs` varchar(255) DEFAULT NULL COMMENT '受伤人数',\n  `sgfssj` varchar(255) DEFAULT NULL COMMENT '事故发生时间',\n  `sggk` text COMMENT '事故概况',\n  `sgfsdd` varchar(255) DEFAULT NULL COMMENT '事故发生地点',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='危化品安全事故信息';\n",
        "input": "平均每起危化品安全事故死亡人数",
        "output": "SELECT AVG(swrs) AS 平均死亡人数 FROM lc_syjglt_whpaqsgxx"
    }
]